It launches as ./pipex infile cmd1 cmd2 outfile and behaves as this line does in the shell < infile cmd1 | cmd2 > outfile .

pipe() , fork() , dup() and dup2() , execve() , access() :


pipe()
|
| |-- fork()
|      |
|      |-- child1 // cmd1
|      :     |--dup2()
|      :     |--close end[0]
|      :     |--execve(cmd1)
|
| |-- fork()
|      |-- child2 // cmd2
|      :     |--dup2()
|      :     |--close end[1]
|      :     |--execve(cmd2)


The general idea: we read from infile, execute cmd1 with infile as input, send the output to cmd2, which will write to outfile.
